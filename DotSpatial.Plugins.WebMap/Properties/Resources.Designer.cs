//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18408
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotSpatial.Plugins.WebMap.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DotSpatial.Plugins.WebMap.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bing Aerial Map.
        /// </summary>
        internal static string BingAerial {
            get {
                return ResourceManager.GetString("BingAerial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bing Hybrid Map.
        /// </summary>
        internal static string BingHybrid {
            get {
                return ResourceManager.GetString("BingHybrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bing Street Map.
        /// </summary>
        internal static string BingRoads {
            get {
                return ResourceManager.GetString("BingRoads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Esri Hydro Base Map.
        /// </summary>
        internal static string EsriHydroBaseMap {
            get {
                return ResourceManager.GetString("EsriHydroBaseMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Esri World Hydro Overlay.
        /// </summary>
        internal static string EsriWorldHydroBasemap {
            get {
                return ResourceManager.GetString("EsriWorldHydroBasemap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Esri World Imagery.
        /// </summary>
        internal static string EsriWorldImagery {
            get {
                return ResourceManager.GetString("EsriWorldImagery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Esri World Street Map.
        /// </summary>
        internal static string EsriWorldStreetMap {
            get {
                return ResourceManager.GetString("EsriWorldStreetMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Esri World Topo.
        /// </summary>
        internal static string EsriWorldTopo {
            get {
                return ResourceManager.GetString("EsriWorldTopo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Google Labels.
        /// </summary>
        internal static string GoogleLabels {
            get {
                return ResourceManager.GetString("GoogleLabels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Google Map.
        /// </summary>
        internal static string GoogleMap {
            get {
                return ResourceManager.GetString("GoogleMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Google Satellite.
        /// </summary>
        internal static string GoogleSatellite {
            get {
                return ResourceManager.GetString("GoogleSatellite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Google Terrain.
        /// </summary>
        internal static string GoogleTerrain {
            get {
                return ResourceManager.GetString("GoogleTerrain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Online Basemap.
        /// </summary>
        internal static string Legend_Title {
            get {
                return ResourceManager.GetString("Legend_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap nodata {
            get {
                object obj = ResourceManager.GetObject("nodata", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à None.
        /// </summary>
        internal static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Opacity: .
        /// </summary>
        internal static string Opacity_Box_Text {
            get {
                return ResourceManager.GetString("Opacity_Box_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change opacity of the basemap layer..
        /// </summary>
        internal static string Opacity_Box_ToolTip {
            get {
                return ResourceManager.GetString("Opacity_Box_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Street Map.
        /// </summary>
        internal static string OpenStreetMap {
            get {
                return ResourceManager.GetString("OpenStreetMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Online Basemap.
        /// </summary>
        internal static string Panel_Name {
            get {
                return ResourceManager.GetString("Panel_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change online basemap service..
        /// </summary>
        internal static string Service_Box_ToolTip {
            get {
                return ResourceManager.GetString("Service_Box_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WMS.
        /// </summary>
        internal static string WMSMap {
            get {
                return ResourceManager.GetString("WMSMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yahoo Hybrid.
        /// </summary>
        internal static string YahooHybrid {
            get {
                return ResourceManager.GetString("YahooHybrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yahoo Map.
        /// </summary>
        internal static string YahooNormal {
            get {
                return ResourceManager.GetString("YahooNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yahoo Satellite.
        /// </summary>
        internal static string YahooSatellite {
            get {
                return ResourceManager.GetString("YahooSatellite", resourceCulture);
            }
        }
    }
}
