<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABHluoTeeQXe+UXe+UXe+UWe+UWe+cfbsMgYKMYYa8VdNoXe+YWeuQWeuQYe+UbfeUWeuQWeuUXe+UX
        e+UXe+UWeuQWeuQWeuQZfOUdfuUXe+UWeuQWeuQWeuQXe+UXe+VHluoTeeQXe+UWe+UWe+UXe+UXgPAY
        KTwAAAATOWIUd90UeuYcfuU+kellp+6RwPM9kek1jOgRd+QXe+UWeuQdfuU9kOkbfeVYoe2t0fYsh+cq
        hucuiOcYe+UWeuQXe+VHl+oTeucWc9YUcM8VctQVctUVdt8ZLUMAAAETO2cSbtAhetdpqOnl8Pzc6/vY
        6fvp8/y41/c2jegTeeQMdeM2jenb6/ugyfTb6vv///+31vfI4PmKvPIUeeQTeeQWeuRHlegTSIEKHzUP
        JTsSKD4SKD4TKUELEBUAAAANFyIOJT8+YIXS4vOu0fZLmes8kOlvre/z+P2ZxfMafeVGluqQwPL////e
        7PuQwPN+tvGy0/b////H3/l0sO8wiugXe+VHk+QKGCcBAAAMEhgPHSsPHi0RHy8KDREAAAAKDxYSHy1y
        gI/j8f9MmesTeeQVeuQbfeWr0PXL4flrq+7S5fr///+hyfQqhucbfeUZfOUcfuVdo+3g7vv///+YxPMa
        feVHlukUUZMBAAAMIjgVYrMVd98WgfEYLkcAAAETPWkae+B9tvPg7vxJl+oUeeQWeuQbfeWnzfXI4Pkp
        huelzPXf7fsrhucWeuQXe+UXe+UWeuQNdeSIu/H+/v43jukXe+VHl+sUdNoRLk4DAAAPOGIUasUWfuwY
        LkYAAAEUPWkPc9xNmuzh7fibweo0iOAth+Zdo+31+f6ozvV7tPD4+/6Uw/Mff+YWeuQXe+UXe+UXe+UQ
        d+RPm+vp8vzD3vg4julHluoUeuYXZrsIEBkHDBETTo0VdtwYLUUAAAEUPWkTdt0qhOJUeaB8enituMbP
        4vXt9f241/dKmOuDufH2+v6Vw/Mff+UWeuQXe+UXe+UXe+UQd+RQm+vn8fzH4Pk6j+lHluoTeeUXe+QT
        SoUDAAAOITUSY7kXK0EAAAEUPWkUd98ZdtkGIkAEAABVfqqTv+1NmutBk+oMdeMbfeaz1Pbh7vsohecV
        eeQXe+UXe+UWeuQNdeOHu/H///84jukUeeRHluoTeeQWfOcYdtkOKkkBAAATPm0WJjcAAAEUPGgUd98a
        d9oKJ0UOCAMVW6UffeETeeQVeeQSeORKmOrk8Pz///+31vcdf+YMdeMOdeMNdeRhpe3u9f3///+Pv/Ia
        fOVHluoTeeQWe+UWfeoZY7IGER0EBQUXO2QCAgETPGgUd98ad9oKJ0UOCQQTWqQWeOAXe+UWe+UWeuQd
        fuUggeZsrO/x9/3y9/2nzfWTwvLI4Pn///+v0vZNmusjguYXe+VHluoTeeQXe+UXe+UXgfEUQnQDBQcS
        ITIWNlsTP24VeuMad9kKJ0UOCQQSWKMVddkWd94Wd94Wd94VeN8QduNMmevh7vu31vfs9fz////W6Prn
        8fu01fc3jekXe+UWeuRHluoTeeYWeuQWeeIWe+YXdtoXSX4ZQ28da70bYawVfOkadtgLJ0YKBgINOWgM
        QnwNQ30NQ3wPSIYUZ74WeeMUeeU/kukHceNBk+q11fcuhuO30ez////E3vgohecWeuRHlukUZbsVTosX
        WJ4UV54RTIsVWKAXaL8TcdUVdtwWe+YadtkLKEcAAAAHBAMHBQQJBgQIBQINFyMYYrESeeYYe+U+kelG
        luoVeuUXe+UvhuPA1u3////D3fkohecWeuRHlecRQHIHCAoXMEsJHTIAAAACBQkGER0PLU8UYLATctQa
        ddYLJ0ULBwIRSoYVY7cVZrsVZboWacEUddwtiOiEufFgpe1ZoO2lzPUkg+cuhuLA1u3////D3fgohecW
        euRHlecQPGoDAAAXNlgYWqAdXJ4XSX8PGCQAAAAJFiQTWKEWbMYJJUQNBwISWKEVd94Xe+YXe+UWe+UP
        duR5s/B8tPBRnOyPwPJBk+qiyvUlgOHA1u3////D3fgohecWeuRHlecQPGoEAAAVOmIVdt0WfOcWfOgY
        fegOK0sAAAALGy4ZZLQMLlACAAASRn0UaMEVddkVeN8VeOAgf+N1sfBmqO6axfS82fgnhOev0fYkgOHA
        1u3///+92vgnhOYWeuRHlecQPGoEAAAVOmIVdtsXe+UXe+UWe+UYe+QPIDICAQASP24TSIIFCQ4KDA4R
        N18PSIUTUZMTVZwSaMR0r+56tPFcou1srO5srO+bx/QlgOHA1u3///+/2/gnhOYWeuVHlecQPGoEAAAV
        OmIVdtsXe+UXe+UXeuQXeuQYWqAAAAAKITkXZ70VUI8NJkIFCxIMCQcNCgcSGycVYLA3jut6tPCZxfOR
        wfN/t/AyiuguheLA1u3////D3fgohecUeOJFlOcNOmoEAAAVOmIVdtsXe+UXe+UXe+UXe+UVasUFAAAL
        GywYZLUXfekZdNQVZbkUX64RWqcUYLEYdtkReOUqhudDlOlFleoqhecRd+Qxh+LA1u3////C3fgnhOcr
        gd1an+U0T20BAAATOWETddsWe+UXe+UWeuQXe+UUaL8EAAAKGy0YZbcWe+UWe+UXe+YXe+YXfOcXe+YW
        e+UXe+QWeuQVeuQVeuQWeuQVeuUxh+LA1u3////F3vghged8ruRHlucYPmcCAAAwSWU6it8cfuUXe+Ub
        feYYeuIYSX4AAAANKUcYctEWe+UXe+UXe+UXe+UXe+UXe+UXe+UXe+UXe+UXe+UXe+UXe+UVeuUxh+LA
        1u3////I4Porg+Dn7vdHlecPPGoCAAAsRWB8qtubw+1lpeqavOBykbEAAQYDCA0YUIsYfegWeuUWeuQW
        euQXe+UXe+UXe+UXe+UXe+UXe+UXe+UXe+UWeuQVeuUyiOPD2O3////B2O+zzur9/v5HlecQPGoDAAAR
        MFAJVqcdXJ9dd5V0c3MUDwkRDQlgbn6AtOstiOgYe+UZfOUTeOUXe+QWeuQXe+UXe+UXe+UXe+UXe+UX
        e+UWeuUReOUtheLJ2uvl6/J+osjm5uf//fxHlecPOGQAAAADBAUGDRQEChAAAAABAAANJT4oYJyYvufg
        6/ebxO+hyfKiy/VAkuoSeOQOduQVeeQXe+UXe+UXe+UWeuQVeuQUeeQ/jN6OtN2Qs9hEjt0beNtjmtOz
        w9RCk+kPW64OQnsORH8NQ30QR4IPT5UOYrsQb9MXe+RLleJlpefa5/X////////J4fs2iuOLvPEphukP
        duQSeOUQd+QNduQXe+U2jOdyoNKjvdiXttedwueCsOGoxeR6mbqHuex/t/GAt/CAt/CAt/CAt/CAt/CA
        t/GAt/GBuPGWwe2yyuSqwdmov9mjvtmov9i6zeCfvNtUlNdfn+RXmN55reSw0vba6vv2+fx8ptKkwN+y
        xdjD1OefwOLV3eZlj7zY1tP////////////////////////////////////////x9/5kqPATeeUfgeho
        n9nr7vLG3veDuO9louMwh+Odvd719vb//v36/P1unM2GqtGovNGswNaUttqsuchhmNDU1NT/////////
        ///////////////////////////+/v7///+dxvF9sujT5fju9v3U4O709PT////z+f682viPu+ijwN/H
        1+je5/Dd6PR5qdyWtdahv96iweFsntPq8fjU1NT////////////////////////////////////////x
        +P6Ru+bZ5fL//////////////////v7////////////i8P7C2fK80+m1zOaKr9WcttKrxeCvyOLF1+v9
        /fzV1dX////////////////////////////////////////O4/e30ez7/P3/////////////////////
        ///////////////////8///r9P7g7Pfd6vju9//1+//////////IyMjd3d3c3Nzc3Nzc3Nzc3Nzc3Nzc
        3Nzc3Nzc3Nzd3NzK0NfJz9bc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzb3Nzb
        29zc3Nzc3Nzc3Nzc3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>