//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotSpatial.Projections {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ProjectionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ProjectionMessages() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DotSpatial.Projections.ProjectionMessages", typeof(ProjectionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authority Code not found..
        /// </summary>
        internal static string AuthorityCodeNotFound {
            get {
                return ResourceManager.GetString("AuthorityCodeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The name %S was found for more than one lla Table in the Nad folder..
        /// </summary>
        internal static string DuplicateTableName {
            get {
                return ResourceManager.GetString("DuplicateTableName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No arguments in initialization list.
        /// </summary>
        internal static string Err1_NoArguments {
            get {
                return ResourceManager.GetString("Err1_NoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The reciprocal flattening (1/f) = 0.
        /// </summary>
        internal static string Err10_ZeroRecFlattening {
            get {
                return ResourceManager.GetString("Err10_ZeroRecFlattening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The Latitude was greater than 90 or less than -90.
        /// </summary>
        internal static string Err11_LatitudeOutOfBounds {
            get {
                return ResourceManager.GetString("Err11_LatitudeOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The square of eccentricity cannot be a negative value..
        /// </summary>
        internal static string Err12_ESquareNegative {
            get {
                return ResourceManager.GetString("Err12_ESquareNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The given semi-major axis was 0 or not given..
        /// </summary>
        internal static string Err13_NoMajorRadius {
            get {
                return ResourceManager.GetString("Err13_NoMajorRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The Latitude or Longitude exceeded limits.
        /// </summary>
        internal static string Err14_LatLonOutOfBounds {
            get {
                return ResourceManager.GetString("Err14_LatLonOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The cartesian X or Y coordinate was invalid.
        /// </summary>
        internal static string Err15_InvalidXY {
            get {
                return ResourceManager.GetString("Err15_InvalidXY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The Degree Minute Second value is formed improperly.
        /// </summary>
        internal static string Err16_ImproperDMS {
            get {
                return ResourceManager.GetString("Err16_ImproperDMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The inverse meridinal distance was non-convergent.
        /// </summary>
        internal static string Err17_NonConvergentRMeridDist {
            get {
                return ResourceManager.GetString("Err17_NonConvergentRMeridDist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The inverse Phi2 value was non-converngent.
        /// </summary>
        internal static string Err18_NonConvergentRPhi2 {
            get {
                return ResourceManager.GetString("Err18_NonConvergentRPhi2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The ArcCosign or ArcSign value was too large..
        /// </summary>
        internal static string Err19_TrigException {
            get {
                return ResourceManager.GetString("Err19_TrigException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No options found in &apos;init&apos; file.
        /// </summary>
        internal static string Err2_NoOptions {
            get {
                return ResourceManager.GetString("Err2_NoOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tolerance Condition Error.
        /// </summary>
        internal static string Err20_ToleranceConditionError {
            get {
                return ResourceManager.GetString("Err20_ToleranceConditionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The conic lat_1 value cannot be its -lat_2.
        /// </summary>
        internal static string Err21_ConicLatitudeError {
            get {
                return ResourceManager.GetString("Err21_ConicLatitudeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Latitude 1 cannot be greater than or equal to 90.
        /// </summary>
        internal static string Err22_Lat1TooLarge {
            get {
                return ResourceManager.GetString("Err22_Lat1TooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Latitude 2 cannot be equal to 0.
        /// </summary>
        internal static string Err23_Lat1TooSmall {
            get {
                return ResourceManager.GetString("Err23_Lat1TooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The lat_ts parameter cannot be greater than or equal to 90.
        /// </summary>
        internal static string Err24_Lat_tsTooLarge {
            get {
                return ResourceManager.GetString("Err24_Lat_tsTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à There was no distance between the control points.
        /// </summary>
        internal static string Err25_NoControlPtSeparation {
            get {
                return ResourceManager.GetString("Err25_NoControlPtSeparation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Projection not selected to be rotated.
        /// </summary>
        internal static string Err26_ProjectionNotRotated {
            get {
                return ResourceManager.GetString("Err26_ProjectionNotRotated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à W &lt;= 0 or M &lt;= 0.
        /// </summary>
        internal static string Err27_WorMTooSmall {
            get {
                return ResourceManager.GetString("Err27_WorMTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à lsat not in 1-5 range.
        /// </summary>
        internal static string Err28_LsatOutOfBounds {
            get {
                return ResourceManager.GetString("Err28_LsatOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Path not in range.
        /// </summary>
        internal static string Err29_PathNotInRange {
            get {
                return ResourceManager.GetString("Err29_PathNotInRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No colon in init= string.
        /// </summary>
        internal static string Err3_NoColon {
            get {
                return ResourceManager.GetString("Err3_NoColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à H was negative or 0.
        /// </summary>
        internal static string Err30_HTooSmall {
            get {
                return ResourceManager.GetString("Err30_HTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à K was less than 0.
        /// </summary>
        internal static string Err31_KTooSmall {
            get {
                return ResourceManager.GetString("Err31_KTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The central latitude was 0 or 90 or alpha = 90.
        /// </summary>
        internal static string Err32_LatOutOfBounds {
            get {
                return ResourceManager.GetString("Err32_LatOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lat_1 = lat_2 or lat_1 = 0 or lat_2 = 90.
        /// </summary>
        internal static string Err33_InvalidLatitudes {
            get {
                return ResourceManager.GetString("Err33_InvalidLatitudes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Elliptical Usage Required.
        /// </summary>
        internal static string Err34_EllipticalRequired {
            get {
                return ResourceManager.GetString("Err34_EllipticalRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The UTM zone parameter was invalid.
        /// </summary>
        internal static string Err35_InvalidUTMZone {
            get {
                return ResourceManager.GetString("Err35_InvalidUTMZone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The arguments were out of range for Tcheby eval.
        /// </summary>
        internal static string Err36_TchebyException {
            get {
                return ResourceManager.GetString("Err36_TchebyException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Projection Not Found.
        /// </summary>
        internal static string Err37_ProjNotFound {
            get {
                return ResourceManager.GetString("Err37_ProjNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to load NAD27-83 correction file.
        /// </summary>
        internal static string Err38_CorrectionNotFound {
            get {
                return ResourceManager.GetString("Err38_CorrectionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Both n and m must be specified and &gt; 0.
        /// </summary>
        internal static string Err39_NorMnotSpecified {
            get {
                return ResourceManager.GetString("Err39_NorMnotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Projection not named.
        /// </summary>
        internal static string Err4_NotNamed {
            get {
                return ResourceManager.GetString("Err4_NotNamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à N&lt;= 0, n &gt; 1 or not specified.
        /// </summary>
        internal static string Err40_InvalidN {
            get {
                return ResourceManager.GetString("Err40_InvalidN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à lat_1 or lat_2 not specified.
        /// </summary>
        internal static string Err41_Lat1OrLat2Missing {
            get {
                return ResourceManager.GetString("Err41_Lat1OrLat2Missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à |lat_1| =|lat_2| .
        /// </summary>
        internal static string Err42_Lat1EqualsLat2 {
            get {
                return ResourceManager.GetString("Err42_Lat1EqualsLat2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à lat_0 is pi/2 from mean lat.
        /// </summary>
        internal static string Err43_MeanLatError {
            get {
                return ResourceManager.GetString("Err43_MeanLatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to parse coordinate system definition.
        /// </summary>
        internal static string Err44_CoordinateUnreadable {
            get {
                return ResourceManager.GetString("Err44_CoordinateUnreadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Geocentric transformation missing z or ellips.
        /// </summary>
        internal static string Err45_GeocentricMissingZ {
            get {
                return ResourceManager.GetString("Err45_GeocentricMissingZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown prime meridian conversion ID.
        /// </summary>
        internal static string Err46_UknownPMID {
            get {
                return ResourceManager.GetString("Err46_UknownPMID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à UnknownProjectionId.
        /// </summary>
        internal static string Err5_UknownProjection {
            get {
                return ResourceManager.GetString("Err5_UknownProjection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Effective eccentricity = 1.
        /// </summary>
        internal static string Err6_EffectiveEccentricity1 {
            get {
                return ResourceManager.GetString("Err6_EffectiveEccentricity1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unkown unit conversion ID.
        /// </summary>
        internal static string Err7_UknownUnitID {
            get {
                return ResourceManager.GetString("Err7_UknownUnitID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid boolean parameter argument.
        /// </summary>
        internal static string Err8_Invalidboolean {
            get {
                return ResourceManager.GetString("Err8_Invalidboolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The elliptical parameter ellps= was unkown.
        /// </summary>
        internal static string Err9_UknownEllipse {
            get {
                return ResourceManager.GetString("Err9_UknownEllipse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à There was an index mismatch problem with the specified file..
        /// </summary>
        internal static string IndexMismatch {
            get {
                return ResourceManager.GetString("IndexMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Inverse grid shift iteration failed, presumably at grid edge. Using first approximation..
        /// </summary>
        internal static string InverseShiftFailed {
            get {
                return ResourceManager.GetString("InverseShiftFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Inverse grid shift iterator failed to converge..
        /// </summary>
        internal static string InvShiftConvergeFailed {
            get {
                return ResourceManager.GetString("InvShiftConvergeFailed", resourceCulture);
            }
        }
    }
}
